pico-8 cartridge // http://www.pico-8.com
version 43
__lua__



-- initialization ##########################################################
function _init()
  -- helper dicts
  dirs={
    [⬆️]={x=0, y=-1},
    [⬇️]={x=0, y=1 },
    [⬅️]={x=-1,y=0 },
    [➡️]={x=1, y=0 }
  }

  state={
    running=0,
    paused=1,
    snk_death=2,
    game_over=3
  }

  menuitem(
    1, "restart", function() init_lvl() end
  )

  init_lvl()
end

function init_lvl()
  -- snake data object
  snk={
    spr=2,
    dir=dirs[⬆️],
    pos={x=7,y=7},
    body={
      {x=7,y=9,spr=16},
      {x=7,y=8,spr=16},
    },
    length=function(self)
      return #self.body + 1
    end,
  }
  add_segment=false

  -- aaple data object
  apl={
    spr=6,
    pos={x=0,y=0},
  }
  move_apl()

  -- animation
  anim_q={}
  tail = {
    pos={x=12,y=12},
    spr=16,
  }
  

  -- metadata
  frames_per_movement=15
  frames_since_render=0
  force_update=false
  game_state=state.running
end



-->8
-- game logic ##########################################################
function _update()
  -- every-frame actions
  frames_since_render += 1
  update_animations()

  -- state machine
  if game_state==state.running then
    if btnp(❎) then
      game_state=state.paused
      return
    end

    handle_inputs()
    update_snk_pos()

  elseif game_state==state.paused then 
    if btnp(❎) then
      game_state=state.running
      return
    end
  end

  if game_state==state.snk_death then
    -- every 5 frames, start death anim for the next tail segment
    if frames_since_render%10 == 0 and segment_number <= #snk.body then
      printh("queueing anim for snake segment "..segment_number, "output.txt")
      add(anim_q, {cocreate(animate), snk.body[segment_number], {16,17,18,19,0}, 15, false, snk.body, segment_number})
      segment_number += 1
    end

    if #snk.body == 0 then game_state=state.game_over end
  end
end

-- move the aaple to a pos not occupued by snake
function move_apl()
  apl.pos.x=1+flr(rnd(14))
  apl.pos.y=1+flr(rnd(14))
  for seg in all(snk.body) do
    if apl.pos.x==seg.x and apl.pos.y==seg.y then 
      apl.pos.x=1+flr(rnd(14))
      apl.pos.y=1+flr(rnd(14))
    end
  end
end

-- handle player inputs for snk movement
function handle_inputs()
  if btnp(⬆️) and snk.dir != dirs[⬇️] then 
    snk.dir=dirs[⬆️]
    snk.spr=2
    force_update=true
  elseif btnp(⬇️) and snk.dir != dirs[⬆️] then
    snk.dir=dirs[⬇️]
    snk.spr=4
    force_update=true
  elseif btnp(⬅️) and snk.dir != dirs[➡️] then 
    snk.dir=dirs[⬅️]
    snk.spr=3
    force_update=true
  elseif btnp(➡️) and snk.dir != dirs[⬅️] then 
    snk.dir=dirs[➡️]
    snk.spr=5
    force_update=true
  end
end

function update_snk_pos()
  -- exit early if possible
  local require_update=frames_since_render >= frames_per_movement 
  if game_state != state.running then return end
  if not require_update and not force_update then return end
  
  -- prep shared vars + play sfx
  sfx(3, nil, nil, nil, 0.9 + rnd(0.5))
  local nxt_pos = {x=snk.pos.x + snk.dir.x, y=snk.pos.y + snk.dir.y}

  -- check for death
  if check_death(nxt_pos) then
    game_state=state.snk_death
    add(anim_q, {cocreate(animate), snk, {32,33,34,35}, 10, true})
    segment_number = 1
    sfx(1)
    return
  end

  -- check for apple
  if nxt_pos.x==apl.pos.x and nxt_pos.y==apl.pos.y then
    add_segment=true
    sfx(0) -- chomp sfx
    move_apl()
  end    

  -- update pos + body segments
  if add_segment==false then deli(snk.body, 1) end
  add(snk.body, {x=snk.pos.x, y=snk.pos.y, spr=16})
  snk.pos.x += snk.dir.x
  snk.pos.y += snk.dir.y

  -- reset frame counter
  frames_since_render=0
  force_update=false
  add_segment=false
end

-- helper fxn to determine is snake dies next move
function check_death(nxt_pos)
  -- wallbang
  if nxt_pos.x==0 or nxt_pos.x==15 then return true end
  if nxt_pos.y==0 or nxt_pos.y==15 then return true end

  -- ouroboros
  for seg in all(snk.body) do
    if nxt_pos.x==seg.x and nxt_pos.y==seg.y then 
      return true 
    end
  end

  -- safe
  return false
end

-- update 
function update_animations()
  if #anim_q == 0 then return end

  for i = #anim_q, 1, -1 do    
    local co,target,frames,fps,loop = unpack(anim_q[i])
    if costatus(co) == "dead" then deli(anim_q, i) 
    else assert(coresume(co,target,frames,fps,loop)) end
  end
end

-->8



-- ######### rendering #########
function _draw()
  -- reset the background
  cls(0)
  map()

  -- draw the snake
  spr(snk.spr, snk.pos.x*8, snk.pos.y*8)
  for seg in all(snk.body) do
    spr(seg.spr, seg.x*8, seg.y*8)
  end

  -- draw the apple
  spr(apl.spr, apl.pos.x*8, apl.pos.y*8)

  -- test animate tail
  spr(tail.spr, tail.pos.x*8, tail.pos.y*8)
end

-- helper fxn to animate by index
function animate(target, spr_tbl, fps, loop, parent_tbl, parent_tbl_i)
  local frame_ct=1;
  local spr_i=1
  while spr_i < #spr_tbl or loop==true do
    -- increment frame counter
    frame_ct += 1

    -- check for frame update
    if frame_ct >= fps then
      frame_ct=0
      spr_i += 1
    end

    -- set target spr index
    target.spr=spr_tbl[1+(spr_i % #spr_tbl)] 
    yield()
  end

  -- if needed, remove target from parent table
  printh("Parent table: "..parent_tbl)
  if parent_tbl then
    deli(parent_tbl, parent_tbl_i)
    printh("Removing item "..parent_tbl_i.." from parent table", "output.txt")
  end
end

__gfx__
000000000000000000000000001399a0023bb32007aa3100000033300111d1101111111111111111111111110000000000000000000000000000000000000000
00000000000000000171171001b39172a77bba7727193b1002e2e8201777177111111b111b1111b1111111110000000000000000000000000000000000000000
00000000007007001b7337b1077baa7391abb91a3a99b770288887821dd71d7111b11311131b1131111111110000000000000000000000000000000000000000
000000000007700033bbbb33013bbbbb99abb99abbbbb310888877e8d111111d111b111b13131131111111110000000000000000000000000000000000000000
0000000000077000a99bba99013bbbbb33bbbb33bbbbb31088888e881717777111131b1311131111111111110000000000000000000000000000000000000000
0000000000700700a19bba19077b99a31b7337b137aab770288888881d1ddd711b131311111311b1111111110000000000000000000000000000000000000000
000000000000000077abb77a01b391720171171027193b10122888211d1ddd71131113111b111311111111110000000000000000000000000000000000000000
0000000000000000023bb3200013aa70000000000a9931000122221001d111101111111111111111111111110000000000000000000000000000000000000000
023bb320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2ddbbdd2002332000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3dbbbbd302dddd200002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbb9dbbb03dbbd30002dd20000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbd9bbb03dbbd30002dd20000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3dbbbbd302dddd200002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2ddbbdd2002332000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
023bb320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000013172a703bb32007aa3100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0171171001b39000007bba7727193b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1b7337b1077baa7391abb91a3a99b770000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000
33bbbb33013bbbbb99abb99abbbbb310000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
a99bba99013bbbbb33bbbb33bbbbb310000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000
a19bba19077b99a31b7337b137aab770000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000
77abb77a01b391720171171027193b10000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
023bb3200013aa70000000000a993100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000003bbbb30023bb320000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000003b3bb3b32bbbbbb3000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000b3abba3b3bbbbbb2000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000bbbddbbbbbbbbbbb000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000bbbadbbbbbbbbbbb000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000b3abba3b3bbbbbb3000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000003b3bb3b32bbbbbb2000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000003bbbb30023bb320000000000000000000000000000000000000000000000000
__map__
0707070707070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a0a0a0a0a0a0a0a0a0a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a090a0a0a0a0a0a0a0a0a0a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a0a0a0a0a0a0a0a0a0a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a090a0a0a0a0a0a090a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0809080a0a0a0a09080a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a080a0a0a0a0a08090a080a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a090a0a0a0a0a08080a0a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a0a0a0a0a0a0a0a0a0a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a0a0a0a0a0a0a0a0a0a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a0a0a0a0a090a0a0a080a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a080a0a0a0a0a0a09090a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a09080a0a0a0a0a0a0a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0909090a0a0a0a0a0a0a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070a0a0a0a080a0a0a0a0a090a0a0a0700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0003000021120221202612024020280202c120001003a1203a1200010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
0010000026050260500000023050200501c0500000000000170501605000000000001505014050000000000010050110501105015050110501105011050000003005030050000000000000000000000000000000
001000000000015630096201361006610076000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000400000b53008530085300a50010500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
